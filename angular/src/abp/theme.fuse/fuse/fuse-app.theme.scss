// -----------------------------------------------------------------------------------------------------
// @ Custom color maps for Fuse
// -----------------------------------------------------------------------------------------------------
$fuse-white: (
  500: white,
  contrast: (
    500: $dark-primary-text,
  ),
);

$fuse-black: (
  500: black,
  contrast: (
    500: $light-primary-text,
  ),
);

$fuse-navy: (
  50: #ececee,
  100: #c5c6cb,
  200: #9ea1a9,
  300: #7d818c,
  400: #5c616f,
  500: #3c4252,
  600: #353a48,
  700: #2d323e,
  800: #262933,
  900: #1e2129,
  A100: #c5c6cb,
  A200: #9ea1a9,
  A400: #5c616f,
  A700: #2d323e,
  contrast: (
    50: $dark-primary-text,
    100: $dark-primary-text,
    200: $dark-primary-text,
    300: $light-primary-text,
    400: $light-primary-text,
    500: $light-primary-text,
    600: $light-primary-text,
    700: $light-primary-text,
    800: $light-primary-text,
    900: $light-primary-text,
    A100: $dark-primary-text,
    A200: $light-primary-text,
    A400: $light-primary-text,
    A700: $light-primary-text,
  ),
);

// Generate Fuse color classes for custom palettes
$custom_palettes: (
  fuse-white: $fuse-white,
  fuse-black: $fuse-black,
  fuse-navy: $fuse-navy,
);

@include fuse-color-classes($custom_palettes);

// -----------------------------------------------------------------------------------------------------
// @ Typography
// -----------------------------------------------------------------------------------------------------

// Angular Material typography
$typography: mat-typography-config(
  $font-family: "Muli, Helvetica Neue, Arial, sans-serif",
  $title: mat-typography-level(20px, 32px, 600),
  $body-2: mat-typography-level(14px, 24px, 600),
  $button: mat-typography-level(14px, 14px, 600),
  $input: mat-typography-level(16px, 1.125, 400)
    // line-height must be unitless !!!,,,,,,,,,,,,
);

// Setup the typography
@include angular-material-typography($typography);

// -----------------------------------------------------------------------------------------------------
// @ Component theming
// -----------------------------------------------------------------------------------------------------

// Import app and page component themes here to enable theming for them
@import "src/abp/theme.fuse/fuse/layout/components/chat-panel/chat-panel.theme";
@import "src/abp/theme.fuse/fuse/layout/components/toolbar/toolbar.theme";
// @import 'src/app/home/home.theme';

#fuse-dashboard {
  .top-bg {
    @include media-breakpoint("lt-md") {
      height: 256px;
    }
  }

  > .center {
    > .header {
      .search-wrapper {
        .search {
          input {
            width: 100%;
            height: 48px;
            min-height: 48px;
            max-height: 48px;
            padding: 0 16px;
            border: none;
            outline: none;
          }
        }
      }

      @include media-breakpoint("lt-md") {
        padding: 8px 0;
        height: 192px !important;
        min-height: 192px !important;
        max-height: 192px !important;
      }
    }
  }
}
#fuse-dashboard.full-h-scroll {
  max-height: 100vh !important;
  overflow: auto !important;
}
.search-wrapper {
  width: 100%;
  max-width: 480px;
  border-radius: 28px;
  overflow: hidden;
  @include mat-elevation(1);

  @include media-breakpoint("xs") {
    width: 100%;
  }

  .search {
    width: 100%;
    height: 48px;
    line-height: 48px;
    padding: 0 5px;

    input {
      width: 100%;
      height: 48px;
      min-height: 48px;
      max-height: 48px;
      padding: 0 16px;
      border: none;
      outline: none;
    }
  }
}
@mixin search-wrapper-theme($theme) {
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);
  $is-dark: map-get($theme, is-dark);
  .search-wrapper {
    background: map-get($background, card) !important;

    .search {
      .mat-icon {
        color: map-get($foreground, icon);
      }
    }
    input {
      background: map-get($background, card) !important;
      color: map-get($foreground, text) !important;
    }
  }
}
// Define a mixin for easier access
@mixin components-theme($theme) {
  // Layout components
  @include chat-panel-theme($theme);
  @include toolbar-theme($theme);
  // @include main-dashboard-theme($theme);
  @include search-wrapper-theme($theme);

  @include app-components-theme($theme);
  .mat-card {
    background-color: map-get(map-get($theme, background), card) !important;
  }
}

// -----------------------------------------------------------------------------------------------------
// @ Define the default theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$default-primary-palette: mat-palette($fuse-navy);
$default-accent-palette: mat-palette($mat-light-blue, 600, 400, 700);
$default-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$theme: mat-light-theme(
  $default-primary-palette,
  $default-accent-palette,
  $default-warn-palette
);

// Add ".theme-default" class to the body to activate this theme.
// Class name must start with "theme-" !!!
// body.theme-default {
body {
  // Create an Angular Material theme from the $theme map
  @include angular-material-theme($theme);

  // Apply the theme to the Fuse Core
  @include fuse-core-theme($theme);

  // Apply the theme to the user components
  @include components-theme($theme);

  // Generate Fuse color classes for primary, accent and warn colors
  $palettes: (
    primary: $default-primary-palette,
    accent: $default-accent-palette,
    warn: $default-warn-palette,
  );

  @include fuse-color-classes($palettes);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a yellow light theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$yellow-light-theme-primary-palette: mat-palette($fuse-navy, 600, 400, 700);
$yellow-light-theme-accent-palette: mat-palette($mat-yellow, 600, 400, 700);
$yellow-light-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$yellow-light-theme: mat-light-theme(
  $yellow-light-theme-primary-palette,
  $yellow-light-theme-accent-palette,
  $yellow-light-theme-warn-palette
);

// Add ".theme-yellow-light" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-yellow-light {
  // Generate the Angular Material theme
  @include angular-material-theme($yellow-light-theme);

  // Apply the theme to the Fuse Core
  @include fuse-core-theme($yellow-light-theme);

  // Apply the theme to the user components
  @include components-theme($yellow-light-theme);

  // Generate Fuse color classes for primary, accent and warn colors
  $palettes: (
    primary: $yellow-light-theme-primary-palette,
    accent: $yellow-light-theme-accent-palette,
    warn: $yellow-light-theme-warn-palette,
  );

  @include fuse-color-classes($palettes);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a blue-gray dark theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$blue-gray-dark-theme-primary-palette: mat-palette($mat-blue);
$blue-gray-dark-theme-accent-palette: mat-palette($mat-blue-gray);
$blue-gray-dark-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$blue-gray-dark-theme: mat-dark-theme(
  $blue-gray-dark-theme-primary-palette,
  $blue-gray-dark-theme-accent-palette,
  $blue-gray-dark-theme-warn-palette
);

// Add ".theme-blue-gray-dark" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-blue-gray-dark {
  // Generate the Angular Material theme
  @include angular-material-theme($blue-gray-dark-theme);

  // Apply the theme to the Fuse Core
  @include fuse-core-theme($blue-gray-dark-theme);

  // Apply the theme to the user components
  @include components-theme($blue-gray-dark-theme);

  // Generate Fuse color classes for primary, accent and warn colors
  $palettes: (
    primary: $blue-gray-dark-theme-primary-palette,
    accent: $blue-gray-dark-theme-accent-palette,
    warn: $blue-gray-dark-theme-warn-palette,
  );

  @include fuse-color-classes($palettes);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a pink dark theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$pink-dark-theme-primary-palette: mat-palette($mat-pink);
$pink-dark-theme-accent-palette: mat-palette($mat-pink);
$pink-dark-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$pink-dark-theme: mat-dark-theme(
  $pink-dark-theme-primary-palette,
  $pink-dark-theme-accent-palette,
  $pink-dark-theme-warn-palette
);

// Add ".theme-pink-dark" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-pink-dark {
  // Generate the Angular Material theme
  @include angular-material-theme($pink-dark-theme);

  // Apply the theme to the Fuse Core
  @include fuse-core-theme($pink-dark-theme);

  // Apply the theme to the user components
  @include components-theme($pink-dark-theme);

  // Generate Fuse color classes for primary, accent and warn colors
  $palettes: (
    primary: $pink-dark-theme-primary-palette,
    accent: $pink-dark-theme-accent-palette,
    warn: $pink-dark-theme-warn-palette,
  );

  @include fuse-color-classes($palettes);
}
// -----------------------------------------------------------------------------------------------------
// @ Define a blue light theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$blue-light-theme-primary-palette: mat-palette($mat-deep-purple, 800);
$blue-light-theme-accent-palette: mat-palette($mat-blue, 600, 400, 700);
$blue-light-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$blue-light-theme: mat-light-theme(
  $blue-light-theme-primary-palette,
  $blue-light-theme-accent-palette,
  $blue-light-theme-warn-palette
);

// Add ".theme-blue-light" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-blue-light {
  // Generate the Angular Material theme
  @include angular-material-theme($blue-light-theme);

  // Apply the theme to the Fuse Core
  @include fuse-core-theme($blue-light-theme);

  // Apply the theme to the user components
  @include components-theme($blue-light-theme);

  // Generate Fuse color classes for primary, accent and warn colors
  $palettes: (
    primary: $blue-light-theme-primary-palette,
    accent: $blue-light-theme-accent-palette,
    warn: $blue-light-theme-warn-palette,
  );

  @include fuse-color-classes($palettes);
}

mat-paginator {
  .mat-form-field-wrapper {
    padding: 0;
  }
}

.mat-form-field-wrapper {
  padding: 0;
}

@import "style/dashboard";
